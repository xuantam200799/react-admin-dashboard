{"version":3,"sources":["reportWebVitals.js","redux/reducers/ThemeReducer.js","redux/reducers/index.js","assets/images/logo.png","components/sidebar/Sidebar.jsx","components/dropdown/Dropdown.jsx","redux/actions/ThemeActions.js","components/thememenu/ThemeMenu.jsx","components/topnav/TopNav.jsx","assets/images/avatar.jpg","components/status-card/StatusCard.jsx","components/table/Table.jsx","components/badge/Badge.jsx","pages/Dashboard.jsx","pages/Customers.jsx","components/Routers.jsx","components/layout/Layout.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ThemeReducer","state","action","type","mode","payload","color","rootReducer","combineReducers","SidebarItem","props","active","className","icon","title","Sidebar","activeItem","sidebar_items","findIndex","item","route","location","pathname","src","logo","alt","map","index","to","display_name","Dropdown","content_ref","toggle_ref","dropdown_toggle_el","useRef","dropdown_content_el","document","addEventListener","e","current","contains","target","classList","toggle","remove","ref","badge","customToggle","contentData","renderItems","renderFooter","exportDefault","setColor","setMode","getTheme","mode_settings","id","name","background","class","color_settings","ThemeMenu","menu_ref","menu_toggle_ref","useState","currMode","setCurrMode","currColor","setCurrColor","dispatch","useDispatch","useEffect","themeClass","find","localStorage","getItem","colorClass","undefined","onClick","add","setItem","ThemeAction","curr_user","image","TopNav","placeholder","user","user_menu","content","renderUserMenu","notifications","renderNotificationItems","StatusCard","count","Table","initDataShow","limit","bodyData","slice","Number","dataShow","setDataShow","pages","range","page","Math","floor","length","Array","keys","currPage","setCurrPage","headData","renderHead","renderBody","start","end","selectPage","Badge","chartOptions","series","data","options","chart","dataLabels","enabled","stroke","curve","xaxis","category","legend","position","grid","show","topCustomers","head","body","latestOrders","header","date","price","status","orderStatus","Dashboard","themeReducer","useSelector","statusCards","theme","height","renderCustomerHead","username","order","renderCustomerBody","renderOrderHead","renderOrderBody","customerTableHead","Customers","customerlist","email","phone","total_orders","total_spend","Routers","path","exact","component","Layout","render","store","createStore","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2cc6a68e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ThemeReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'SET_MODE':\r\n            return {\r\n                ...state,\r\n                mode: action.payload\r\n            }\r\n        case 'SET_COLOR':\r\n            return {\r\n                ...state,\r\n                color: action.payload\r\n            }\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ThemeReducer","import ThemeReducer from \"./ThemeReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({ThemeReducer});\r\n\r\nexport default rootReducer","export default __webpack_public_path__ + \"static/media/logo.ef7bfcda.png\";","import React from 'react';\r\n\r\nimport './sidebar.css';\r\n\r\nimport logo from '../../assets/images/logo.png';\r\n\r\nimport sidebar_items from '../../assets/JsonData/sidebar_routes.json';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const SidebarItem = props => {\r\n\r\n    const active = props.active ? 'active' : '';\r\n\r\n    return (\r\n        <div className=\"sidebar__item\">\r\n            <div className={`sidebar__item-inner ${active}`}>\r\n                <i className={props.icon}></i>\r\n                <span>\r\n                    {props.title}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    const activeItem = sidebar_items.findIndex(item => item.route === props.location.pathname);\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__logo\">\r\n                <img src={logo} alt=\"company logo\" />\r\n            </div>\r\n            {\r\n                sidebar_items.map((item, index) => (\r\n                    <Link \r\n                        to={item.route}\r\n                        key={index}\r\n                    >\r\n                        <SidebarItem \r\n                            title={item.display_name}\r\n                            icon={item.icon}\r\n                            active={index === activeItem}\r\n                        />\r\n                    </Link>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import React, { useRef } from 'react';\r\n\r\nimport './dropdown.css';\r\n\r\nconst clickOutsideRef = (content_ref, toggle_ref) => {\r\n    document.addEventListener('mousedown', (e) => {\r\n        // user click toggle\r\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\r\n            content_ref.current.classList.toggle('active');\r\n        } else {\r\n            // user click outsite toggle and content\r\n            if (toggle_ref.current && !toggle_ref.current.contains(e.target)) {\r\n                content_ref.current.classList.remove('active');\r\n            }\r\n        }\r\n    }) \r\n}\r\n\r\nconst Dropdown = (props) => {\r\n\r\n    const dropdown_toggle_el = useRef(null);\r\n    const dropdown_content_el = useRef(null);\r\n\r\n    clickOutsideRef(dropdown_content_el, dropdown_toggle_el);\r\n\r\n    return (\r\n        <div className=\"dropdown\">\r\n            <button ref={dropdown_toggle_el} className=\"dropdown__toggle\">\r\n                {\r\n                    props.icon ? <i className={props.icon}></i> : ''\r\n                }\r\n                {\r\n                    props.badge ? <span className='dropdown__toggle-badge'>{props.badge}</span> : ''\r\n                }\r\n                {\r\n                    props.customToggle ? props.customToggle() : ''\r\n                }\r\n            </button>\r\n            <div ref={dropdown_content_el} className=\"dropdown__content\">\r\n                {\r\n                    props.contentData && props.renderItems ? props.contentData.map((item, index) => props.renderItems(item, index)) : ''\r\n                }\r\n                {\r\n                    props.renderFooter ? (\r\n                        <div className=\"dropdown__footer\">\r\n                            {props.renderFooter()}\r\n                        </div>\r\n                    ) : ''\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dropdown;","const setMode = mode => {\r\n    return {\r\n        type: 'SET_MODE',\r\n        payload: mode\r\n    }\r\n}\r\n\r\nconst setColor = color => {\r\n    return {\r\n        type: 'SET_COLOR',\r\n        payload: color\r\n    }\r\n}\r\n\r\nconst getTheme = () => {\r\n    return {\r\n        type: 'GET_THEME',\r\n    }\r\n}\r\n\r\nconst exportDefault = {\r\n    setColor,\r\n    setMode,\r\n    getTheme,\r\n}\r\n\r\nexport default exportDefault","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport './thememenu.css';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport ThemeAction from '../../redux/actions/ThemeActions'\r\n\r\nconst mode_settings = [\r\n    {\r\n        id: 'light',\r\n        name: 'Light',\r\n        background: 'light-background',\r\n        class: 'theme-mode-light'\r\n    },\r\n    {\r\n        id: 'dark',\r\n        name: 'Dark',\r\n        background: 'dark-background',\r\n        class: 'theme-mode-dark'\r\n    }\r\n]\r\n\r\nconst color_settings = [\r\n    {\r\n        id: 'blue',\r\n        name: 'Blue',\r\n        background: 'blue-color',\r\n        class: 'theme-color-blue'\r\n    },\r\n    {\r\n        id: 'red',\r\n        name: 'Red',\r\n        background: 'red-color',\r\n        class: 'theme-color-red'\r\n    },\r\n    {\r\n        id: 'cyan',\r\n        name: 'Cyan',\r\n        background: 'cyan-color',\r\n        class: 'theme-color-cyan'\r\n    },\r\n    {\r\n        id: 'green',\r\n        name: 'Green',\r\n        background: 'green-color',\r\n        class: 'theme-color-green'\r\n    },\r\n    {\r\n        id: 'orange',\r\n        name: 'Orange',\r\n        background: 'orange-color',\r\n        class: 'theme-color-orange'\r\n    },\r\n]\r\n\r\nconst clickOutsideRef = (content_ref, toggle_ref) => {\r\n    document.addEventListener('mousedown', (e) => {\r\n        // user click toggle\r\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\r\n            content_ref.current.classList.toggle('active')\r\n        } else {\r\n            // user click outside toggle and content\r\n            if (content_ref.current && !content_ref.current.contains(e.target)) {\r\n                content_ref.current.classList.remove('active')\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nconst ThemeMenu = () => {\r\n\r\n    const menu_ref = useRef(null);\r\n    const menu_toggle_ref = useRef(null);\r\n\r\n    clickOutsideRef(menu_ref, menu_toggle_ref);\r\n\r\n    const setActiveMenu = () => menu_ref.current.classList.add('active');\r\n\r\n    const closeMenu = () => menu_ref.current.classList.remove('active');\r\n\r\n    const [currMode, setCurrMode] = useState('light');\r\n\r\n    const [currColor, setCurrColor] = useState('blue');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setMode = mode => {\r\n        setCurrMode(mode.id);\r\n        localStorage.setItem('themeMode', mode.class);\r\n        dispatch(ThemeAction.setMode(mode.class))\r\n    }\r\n\r\n    const setColor = color => {\r\n        setCurrColor(color.id);\r\n        localStorage.setItem('colorMode', color.class);\r\n        dispatch(ThemeAction.setColor(color.class))\r\n    }\r\n\r\n    useEffect(() => {\r\n        const themeClass = mode_settings.find(e => e.class === localStorage.getItem('themeMode', 'theme-mode-light'));\r\n\r\n        const colorClass = color_settings.find(e => e.class === localStorage.getItem('colorMode', 'theme-mode-light'));\r\n\r\n        if(themeClass !== undefined) setCurrMode(themeClass.id)\r\n\r\n        if(colorClass !== undefined) setCurrColor(colorClass.id)\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button ref={menu_toggle_ref} className=\"dropdown__toggle\" onClick={() => setActiveMenu()}>\r\n                <i className=\"bx bx-palette\"></i>\r\n            </button>\r\n            <div ref={menu_ref} className=\"theme-menu\">\r\n                <h4>Theme settings</h4>\r\n                <button className=\"theme-menu__close\" onClick={() => closeMenu()}>\r\n                    <i className=\"bx bx-x\"></i>\r\n                </button>\r\n                <div className=\"theme-menu__select\">\r\n                    <span>Choose mode</span>\r\n                    <ul className=\"mode-list\">\r\n                        {\r\n                            mode_settings.map((item, index) => (\r\n                                <li key={index} onClick={() => setMode(item)}>\r\n                                    <div className={`mode-list__color ${item.background} ${item.id === currMode ? 'active' : ''}`}>\r\n                                        <i className={`bx bx-check`}></i>\r\n                                    </div>\r\n                                    <span>{item.name}</span>\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className=\"theme-menu__select\">\r\n                    <span>Choose color</span>\r\n                    <ul className=\"mode-list\">\r\n                        {\r\n                            color_settings.map((item, index) => (\r\n                                <li key={index} onClick={() => setColor(item)}>\r\n                                    <div className={`mode-list__color ${item.background} ${item.id === currColor ? 'active' : ''}`}>\r\n                                        <i className={`bx bx-check`}></i>\r\n                                    </div>\r\n                                    <span>{item.name}</span>\r\n                                </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ThemeMenu;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './topnav.css';\r\n\r\nimport Dropdown from '../dropdown/Dropdown.jsx';\r\nimport ThemeMenu from '../thememenu/ThemeMenu.jsx';\r\n\r\nimport notifications from '../../assets/JsonData/notification.json';\r\nimport user_menu from '../../assets/JsonData/user_menus.json';\r\n\r\nimport user_image from '../../assets/images/avatar.jpg';\r\n\r\n\r\n\r\nconst curr_user = {\r\n    display_name: 'Ho Xuan Tam',\r\n    image: user_image,\r\n}\r\n\r\nconst renderUserToggle = (user) => (\r\n    <div className=\"topnav__right-user\">\r\n        <div className=\"topnav__right-user__image\">\r\n            <img src={user.image} alt=\"\" />\r\n        </div>\r\n        <div className=\"topnav__right-user__name\">\r\n            {user.display_name}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nconst renderNotificationItems = (item, index) => (\r\n    <div className=\"notification-item\" key={index}>\r\n        <i className={item.icon}></i>\r\n        <span>{item.content}</span>\r\n    </div>\r\n)\r\n\r\nconst renderUserMenu = (item, index) => (\r\n    <Link to='/' key={index}>\r\n        <div className=\"notification-item\">\r\n            <i className={item.icon}></i>\r\n            <span>{item.content}</span>\r\n        </div>\r\n    </Link>\r\n)\r\n\r\nconst TopNav = () => {\r\n    return (\r\n        <div className='topnav'>\r\n            <div className=\"topnav__search\">\r\n                <input type=\"text\" placeholder=\"Search here...\" />\r\n                <i className='bx bx-search'></i>\r\n            </div>\r\n            <div className=\"topnav__right\">\r\n                <div className=\"topnav__right-item\">\r\n                    {/* dropdown here */}\r\n                    <Dropdown \r\n                        customToggle={() => renderUserToggle(curr_user)}\r\n                        contentData={user_menu}\r\n                        renderItems={(item, index) => renderUserMenu(item, index)}\r\n                    />\r\n                </div>\r\n                <div className=\"topnav__right-item\">\r\n                    {/* dropdown here */}\r\n                    <Dropdown \r\n                        icon='bx bx-bell'\r\n                        badge='12'\r\n                        contentData={notifications}\r\n                        renderItems={(item, index) => renderNotificationItems(item, index)}\r\n                        renderFooter={() => <Link to='/'>View All</Link>}\r\n                    />\r\n                </div>\r\n                <div className=\"topnav__right-item\">\r\n                    {/* theme setting */}\r\n                    <ThemeMenu />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TopNav;","export default __webpack_public_path__ + \"static/media/avatar.5198f3a0.jpg\";","import React from 'react';\r\n\r\nimport './statuscard.css'\r\n\r\nconst StatusCard = (props) => {\r\n    return (\r\n        <div className=\"status-card\">\r\n            <div className=\"status-card__icon\">\r\n                <i className={props.icon}></i>\r\n            </div>\r\n            <div className=\"status-card__info\">\r\n                <h4>{props.count}</h4>\r\n                <span>{props.title}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatusCard;","import React, { useState } from 'react';\r\n\r\nimport './table.css'\r\n\r\nconst Table = (props) => {\r\n\r\n    const initDataShow = props.limit && props.bodyData ? props.bodyData.slice(0, Number(props.limit)) : props.bodyData;\r\n\r\n    const [dataShow, setDataShow] = useState(initDataShow);\r\n\r\n    let pages = 1;\r\n\r\n    let range = [];\r\n\r\n    if (props.limit !== undefined) {\r\n        let page = Math.floor(props.bodyData.length / Number(props.limit));\r\n        pages = props.bodyData.length % Number(props.limit) === 0 ? page : page + 1;\r\n        range = [...Array(pages).keys()]\r\n    }\r\n\r\n    const [currPage, setCurrPage] = useState(0);\r\n\r\n    const selectPage = page => {\r\n        const start = Number(props.limit) * page;\r\n        const end = start + Number(props.limit);\r\n\r\n        setDataShow(props.bodyData.slice(start, end));\r\n\r\n        setCurrPage(page)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"table-wrapper\">\r\n                <table>\r\n                    {\r\n                        props.headData && props.renderHead ? (\r\n                            <thead>\r\n                                <tr>\r\n                                    {\r\n                                        props.headData.map((item, index) => props.renderHead(item, index))\r\n                                    }\r\n                                </tr>\r\n                            </thead>\r\n                        ) : null\r\n                    }\r\n                    {\r\n                        props.bodyData && props.renderBody ? (\r\n                            <tbody>\r\n                                {\r\n                                    dataShow.map((item, index) => props.renderBody(item, index))\r\n                                }\r\n                            </tbody>\r\n                        ) : null\r\n                    }\r\n                </table>\r\n            </div>\r\n            {\r\n                pages > 1 ? (\r\n                    <div className=\"table__pagination\">\r\n                        {\r\n                            range.map((item, index) => (\r\n                                <div \r\n                                    className={`table__pagination-item ${currPage === index ? 'active' : ''}`} \r\n                                    key={index}\r\n                                    onClick={() => selectPage(index)}\r\n                                >\r\n                                    {item + 1}\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                ) : null\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Table;","import React from 'react';\r\n\r\nimport './badge.css';\r\n\r\nconst Badge = (props) => {\r\n    return (\r\n        <span className={`badge badge-${props.type}`}>\r\n            {props.content}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default Badge;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Chart from 'react-apexcharts';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport StatusCard from '../components/status-card/StatusCard.jsx';\r\nimport Table from '../components/table/Table.jsx';\r\nimport Badge from '../components/badge/Badge.jsx';\r\n\r\nimport statusCards from '../assets/JsonData/status-card-data.json';\r\n\r\n\r\nconst chartOptions = {\r\n    series: [{\r\n        name: 'Online Customers',\r\n        data: [40, 70, 60, 20, 98, 29, 87, 56, 48]\r\n    },\r\n    {\r\n        name: 'Store Customers',\r\n        data: [30, 50, 80, 10, 78, 50, 30, 57, 20]\r\n    }],\r\n    options: {\r\n        color: ['#6ab04c', '#2980b9'],\r\n        chart: {\r\n            background: 'transparent',\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        stroke: {\r\n            curve: 'smooth',\r\n        },\r\n        xaxis: {\r\n            category: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\r\n        },\r\n        legend: {\r\n            position: 'top',\r\n        },\r\n        grid: {\r\n            show: false,\r\n        }\r\n    }\r\n};\r\n\r\nconst topCustomers = {\r\n    head: [\r\n        'users',\r\n        'total orders',\r\n        'total spending'\r\n    ],\r\n    body: [\r\n        {\r\n            \"username\": \"john doe\",\r\n            \"order\": \"490\",\r\n            \"price\": \"$15,870\"\r\n        },\r\n        {\r\n            \"username\": \"frank iva\",\r\n            \"order\": \"250\",\r\n            \"price\": \"$12,251\"\r\n        },\r\n        {\r\n            \"username\": \"anthony baker\",\r\n            \"order\": \"120\",\r\n            \"price\": \"$10,840\"\r\n        },\r\n        {\r\n            \"username\": \"frank iva\",\r\n            \"order\": \"110\",\r\n            \"price\": \"$9,251\"\r\n        },\r\n        {\r\n            \"username\": \"anthony baker\",\r\n            \"order\": \"80\",\r\n            \"price\": \"$8,840\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst renderCustomerHead = (item, index) => (\r\n    <th key={index}>{item}</th>\r\n)\r\n\r\nconst renderCustomerBody = (item, index) => (\r\n    <tr key={index}>\r\n        <td>{item.username}</td>\r\n        <td>{item.order}</td>\r\n        <td>{item.price}</td>\r\n    </tr>\r\n)\r\n\r\nconst latestOrders = {\r\n    header: [\r\n        \"order id\",\r\n        \"user\",\r\n        \"total price\",\r\n        \"date\",\r\n        \"status\"\r\n    ],\r\n    body: [\r\n        {\r\n            id: \"#OD1711\",\r\n            user: \"john doe\",\r\n            date: \"17 Jun 2021\",\r\n            price: \"$900\",\r\n            status: \"shipping\"\r\n        },\r\n        {\r\n            id: \"#OD1712\",\r\n            user: \"frank iva\",\r\n            date: \"1 Jun 2021\",\r\n            price: \"$400\",\r\n            status: \"paid\"\r\n        },\r\n        {\r\n            id: \"#OD1713\",\r\n            user: \"anthony baker\",\r\n            date: \"27 Jun 2021\",\r\n            price: \"$200\",\r\n            status: \"pending\"\r\n        },\r\n        {\r\n            id: \"#OD1712\",\r\n            user: \"frank iva\",\r\n            date: \"1 Jun 2021\",\r\n            price: \"$400\",\r\n            status: \"paid\"\r\n        },\r\n        {\r\n            id: \"#OD1713\",\r\n            user: \"anthony baker\",\r\n            date: \"27 Jun 2021\",\r\n            price: \"$200\",\r\n            status: \"refund\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst orderStatus = {\r\n    \"shipping\": \"primary\",\r\n    \"pending\": \"warning\",\r\n    \"paid\": \"success\",\r\n    \"refund\": \"danger\"\r\n}\r\n\r\nconst renderOrderHead = (item, index) => (\r\n    <th key={index}>{item}</th>\r\n)\r\n\r\nconst renderOrderBody = (item, index) => (\r\n    <tr key={index}>\r\n        <td>{item.id}</td>\r\n        <td>{item.user}</td>\r\n        <td>{item.price}</td>\r\n        <td>{item.date}</td>\r\n        <td>\r\n            <Badge \r\n                type={orderStatus[item.status]}\r\n                content={item.status}\r\n            />\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nconst Dashboard = () => {\r\n\r\n    const themeReducer = useSelector(state => state.ThemeReducer.mode);\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"page-header\">Dashboard</h2>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <div className=\"row\">\r\n                        {\r\n                            statusCards.map((item, index) => (\r\n                                <div className=\"col-6\" key={index}>\r\n                                    {/* status card here */}\r\n                                    <StatusCard \r\n                                        icon={item.icon}\r\n                                        count={item.count}\r\n                                        title={item.title}\r\n                                    />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"card full-height\">\r\n                        {/* charts */}\r\n                        <Chart \r\n                            options={themeReducer === 'theme-mode-dark' ? {\r\n                                ...chartOptions.options,\r\n                                theme: {mode: 'dark'}\r\n                            } : {\r\n                                ...chartOptions.options,\r\n                                theme: {mode: 'light'}\r\n                            }}\r\n                            series={chartOptions.series}\r\n                            type='line'\r\n                            height='100%'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card__header\">\r\n                            <h3>top customers</h3>\r\n                        </div>\r\n                        <div className=\"card__body\">\r\n                            <Table\r\n                                headData={topCustomers.head}\r\n                                renderHead={(item, index) => renderCustomerHead(item, index)}\r\n                                bodyData={topCustomers.body}\r\n                                renderBody={(item, index) => renderCustomerBody(item, index)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"card__footer\">\r\n                            <Link to='/'>view all</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card__header\">\r\n                            <h3>latest orders</h3>\r\n                        </div>\r\n                        <div className=\"card__body\">\r\n                            <Table \r\n                                headData={latestOrders.header}\r\n                                renderHead={(item, index) => renderOrderHead(item, index)}\r\n                                bodyData={latestOrders.body}\r\n                                renderBody={(item, index) => renderOrderBody(item, index)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"card__footer\">\r\n                            <Link to='/'>view all</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","import React from 'react';\r\n\r\nimport Table from '../components/table/Table.jsx';\r\n\r\nimport customerlist from '../assets/JsonData/customers-list.json';\r\n\r\nconst customerTableHead = [\r\n    '',\r\n    'name',\r\n    'email',\r\n    'phone',\r\n    'total orders',\r\n    'total spend',\r\n    'location'\r\n]\r\n\r\nconst renderHead = (item, index) => (\r\n    <th key={index}>{item}</th>\r\n)\r\n\r\nconst renderBody = (item, index) => (\r\n    <tr key={index}>\r\n        <td>{item.id}</td>\r\n        <td>{item.name}</td>\r\n        <td>{item.email}</td>\r\n        <td>{item.phone}</td>\r\n        <td>{item.total_orders}</td>\r\n        <td>{item.total_spend}</td>\r\n        <td>{item.location}</td>\r\n    </tr>\r\n)\r\n\r\nconst Customers = () => {\r\n    return (\r\n        <div>\r\n            <h2 className=\"page-header\">\r\n                customers\r\n            </h2>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card__body\">\r\n                            <Table \r\n                                limit='10'\r\n                                headData={customerTableHead}\r\n                                renderHead={(item, index) => renderHead(item, index)}\r\n                                bodyData={customerlist}\r\n                                renderBody={(item, index) => renderBody(item, index)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Customers;","import React from 'react';\r\n\r\nimport { Route, Switch} from 'react-router-dom';\r\n\r\nimport Dashboard from '../pages/Dashboard.jsx'\r\nimport Customers from '../pages/Customers.jsx'\r\n\r\nconst Routers = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path='/' exact component={Dashboard} />\r\n            <Route path='/Customers' component={Customers} />\r\n            \r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Routers;","import React, { useEffect } from 'react';\r\n\r\nimport './layout.css'\r\n\r\nimport Sidebar from '../sidebar/Sidebar.jsx';\r\nimport TopNav from '../topnav/TopNav.jsx'\r\nimport Routers from '../Routers.jsx';\r\n\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport ThemeAction from '../../redux/actions/ThemeActions'\r\n\r\nconst Layout = () => {\r\n\r\n    const ThemeReducer = useSelector((state) => state.ThemeReducer);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const themeClass = localStorage.getItem('themeMode', 'theme-mode-light');\r\n\r\n        const colorClass = localStorage.getItem('colorMode', 'theme-mode-light');\r\n\r\n        dispatch(ThemeAction.setMode(themeClass))\r\n\r\n        dispatch(ThemeAction.setColor(colorClass))\r\n\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Route render={(props) => (\r\n                <div className={`layout ${ThemeReducer.mode} ${ThemeReducer.color}`}>\r\n                    <Sidebar {...props}/>\r\n                    <div className=\"layout__content\">\r\n                        <TopNav/>\r\n                        <div className=\"layout__content-main\">\r\n                            <Routers />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}/>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport rootReducer from './redux/reducers';\n\nimport './assets/css/index.css';\nimport './assets/css/grid.css';\nimport './assets/css/theme.css';\nimport './assets/boxicons-2.0.7/css/boxicons.min.css';\n\nimport Layout from './components/layout/Layout.jsx';\n\nconst store = createStore(\n  rootReducer\n)\n\ndocument.title = 'dashboard'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Layout />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}